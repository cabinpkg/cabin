#!/bin/bash
#
# Summary: init hoge
# Options: [--yes | -y]
#
set -e

print_warning () {
	printf '\e[32mAlready poac.yml exists.\e[m\n'
	echo
	printf '\e[32mSee `poac init --help`\e[m\n'
	echo
	printf '\e[32mUse `poac install <pkg>` afterwards to install a package and\e[m\n'
	printf '\e[32msave it as a dependency in the poac.yml file.\e[m\n'
	echo
	printf "\e[32mDo you want overwrite? (y/n): \e[m" && read ans
	ans=`echo $ans | tr '[:upper:]' '[:lower:]'`
	[[ $ans == 'y' || $ans == 'yes' ]] && return 0 || return 1
}

make_yml () {
	echo
	if [[ "$1" == 0 ]]; then
		read -p "app (${PWD##*/}): " app
		read -p "version (0.0.1): " version
		read -p "cpp version: " cpp
		read -p "description: " description
		read -p "author: " author
		read -p "license (ISC): " license
		echo
	fi
	yml="app: ${app:-${PWD##*/}}
version: ${version:-"0.0.1"}
cpp: ${cpp:-"\"\""}
description: ${description:-"\"\""}
package:
  authors:
    - ${author:-"\"\""}
  license: ${license:-"ISC"}
  links:
    - GitHub: https://github.com
"
	printf "$yml"
	printf "$yml" > ./poac.yml
	echo
	echo 'poac.yml was created.'
}

subcommand=${0##*/poac-}
if [[ "$1" == '--help' || "$1" == '-h' ]]; then
	exec "${POAC_ROOT}/lib/poac---help" $subcommand
elif [[ "$1" == '--yes' || "$1" == '-y' || "$#" == 0 ]]; then
	if [ -f './poac.yml' ]; then
		print_warning "$#" && make_yml "$#" || printf "\ncanceled\n"
	else
		make_yml "$#"
	fi
else
	echo "poac ${subcommand}: illegal option -- $@"
	exec "${POAC_ROOT}/lib/poac---help" $subcommand
fi
