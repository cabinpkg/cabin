include_guard(GLOBAL)

message(CHECK_START "Adding Boost")
list(APPEND CMAKE_MESSAGE_INDENT "  ")

set(Boost_DEBUG ${VERBOSE})
if (DEFINED BOOST_ROOT)
    set(BOOST_LIBRARYDIR "${BOOST_ROOT}/lib")
endif()

find_package(Boost 1.70.0 REQUIRED COMPONENTS system regex)
if (Boost_FOUND)
    message(CHECK_PASS "added")
    message(STATUS "Boost include directories are ... ${Boost_INCLUDE_DIRS}")
    message(STATUS "Boost library directories are ... ${Boost_LIBRARY_DIRS}")
    message(STATUS "Boost libraries are ... ${Boost_LIBRARIES}")

    # TODO: Move this to the root CMakeLists.txt
    target_include_directories(poac_util_rustify PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_util_cfg PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_util_misc PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_util_pretty PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_util_meta PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_util_archive PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_util_registry_conan_v1_manifest PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_core_resolver_sat PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_core_resolver_registry PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_cmd_lint PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_util_net PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_util_registry_conan_v1_resolver PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_core_resolver PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_core_builder_syntax PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_core_builder_manifest PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_core_builder_build PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_core_resolver_types PRIVATE ${Boost_INCLUDE_DIRS})
#    target_include_directories(poac_cmd_graph PRIVATE ${Boost_INCLUDE_DIRS})
    target_include_directories(poac_cmd_search PRIVATE ${Boost_INCLUDE_DIRS})
    # mitama-cpp-result depends on Boost internally
    target_include_directories(poac_util_result_macros INTERFACE ${Boost_INCLUDE_DIRS})

    target_include_directories(poac PRIVATE ${Boost_INCLUDE_DIRS})
    target_link_directories(poac PRIVATE ${Boost_LIBRARY_DIRS})
    list(APPEND POAC_DEPENDENCIES ${Boost_LIBRARIES})
else ()
    message(CHECK_FAIL "not found")
    list(APPEND missingDependencies boost)
endif ()

list(POP_BACK CMAKE_MESSAGE_INDENT)
