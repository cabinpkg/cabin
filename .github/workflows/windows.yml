name: Windows

on: [push, pull_request]

jobs:
  build:
    name: Visual Studio 2019
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [Debug] # TODO: Release
    steps:
      - uses: actions/checkout@v1

      - name: libgit2 cache
        uses: actions/cache@v1
        id: libgit2-cache
        with:
          path: 'C:/Program Files (x86)/libgit2'
          key: ${{ runner.os }}-libgit2-0.28.2
      - name: Install libgit2
        if: steps.libgit2-cache.outputs.cache-hit != 'true'
        run: |
          git clone -q -b v0.28.2 https://github.com/libgit2/libgit2.git
          mkdir libgit2/build
          cd libgit2/build
          cmake .. -G "Visual Studio 16 2019"
          cmake --build . --target install --config ${{ matrix.build_type }}

      - name: toml11 cache
        uses: actions/cache@v1
        id: toml11-cache
        with:
          path: 'C:/Program Files (x86)/toml11'
          key: ${{ runner.os }}-toml11-3.1.0
      - name: Install toml11
        if: steps.toml11-cache.outputs.cache-hit != 'true'
        run: |
          git clone -q -b v3.1.0 https://github.com/ToruNiina/toml11.git
          mkdir toml11/build
          cd toml11/build
          cmake .. -G "Visual Studio 16 2019"
          cmake --build . --target install --config ${{ matrix.build_type }}

      - name: Install libssl
        run: choco install openssl

      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -Dpoac_BUILD_TEST=OFF `
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
            -DGIT2_DIR="C:/Program Files (x86)/libgit2" `
            -DTOML11_DIR="C:/Program Files (x86)/toml11/"
          cmake --build . --target install --config ${{ matrix.build_type }}

      - name: Execution test
        run: 'C:/Program Files (x86)/poac/bin/poac.exe' --help

      - uses: actions/upload-artifact@v1
        if: matrix.build_type == 'Release'
        with:
          name: windows
          path: 'C:/Program Files (x86)/poac/bin/poac.exe'

      - name: Slack Notification
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: '*${{ github.workflow }} Visual Studio 2019 (${{ matrix.build_type }})*'
          url: ${{ secrets.SLACK_WEBHOOK }}
          username: 'GitHub Action (${{ github.workflow }})'
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
