name: Windows

on: [push, pull_request]

jobs:
  build:
    name: Visual Studio 2019
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [Debug] # TODO: Release
    steps:
      - uses: actions/checkout@v1
      - name: Install libgit2  # TODO: cacheする
        run: |
          git clone -q -b v0.28.2 https://github.com/libgit2/libgit2.git
          mkdir libgit2/build
          cd libgit2/build
          cmake .. -G "Visual Studio 16 2019"
          cmake --build . --target install --config ${{ matrix.build_type }}
      - name: Install toml11
        run: |
          git clone -q -b v3.1.0 https://github.com/ToruNiina/toml11.git
          mkdir toml11/build
          cd toml11/build
          cmake .. -G "Visual Studio 16 2019"
          cmake --build . --target install --config ${{ matrix.build_type }}
      - name: Install libssl
        run: choco install openssl

      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. \
            -Dpoac_BUILD_TEST=OFF \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DGIT2_DIR=C:/Program Files\ (x86)/libgit2 \
            -DTOML11_DIR=C:/Program Files\ (x86)/toml11/
          cmake --build . --target install --config ${{ matrix.build_type }}

      - name: Slack Notification
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: '*${{ github.workflow }} Visual Studio 2019 (${{ matrix.build_type }})*'
          url: ${{ secrets.SLACK_WEBHOOK }}
          username: 'GitHub Action (${{ github.workflow }})'
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Build and Test
#        run: |
#          mkdir build && cd build
#          cmake -Dpoac_BUILD_TEST=ON -DCMAKE_BUILD_TYPE=Coverage ..
#          make install
#          ctest --output-on-failure --verbose
#        env:
#          POAC_GITHUB_API_TOKEN: ${{ secrets.POAC_GITHUB_API_TOKEN }}
#      - name: Print help
#        run: poac help
