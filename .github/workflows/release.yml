name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

env:
  CXX: g++-14

jobs:
  bump:
    runs-on: ubuntu-24.04
    outputs:
      release_created: ${{ steps.rp.outputs.release_created }}
      tag: ${{ steps.rp.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: rp
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          config-file: .github/release-please-config.json
          manifest-file: .github/.release-please-manifest.json
          skip-labeling: true

  build:
    needs: bump
    if: needs.bump.outputs.release_created == 'true'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.bump.outputs.tag }}

      - name: Setup Ubuntu dependencies
        uses: ./.github/actions/setup-ubuntu-deps

      - name: Build cabin
        run: make BUILD=release -j4

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: cabin-binary
          path: build/cabin

  package:
    needs: [bump, build]
    if: needs.bump.outputs.release_created == 'true'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.bump.outputs.tag }}

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: cabin-binary
          path: build/

      - name: Make binary executable
        run: chmod +x build/cabin

      - name: Install nFPM
        run: |
          echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
          sudo apt-get update
          sudo apt-get install -y nfpm

      - name: Create DEB package
        run: nfpm pkg --packager deb
        env:
          CABIN_VERSION: ${{ needs.bump.outputs.tag }}

      - name: Create RPM package
        run: nfpm pkg --packager rpm
        env:
          CABIN_VERSION: ${{ needs.bump.outputs.tag }}

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rel-packages
          path: |
            *.deb
            *.rpm

  demo:
    needs: [bump, build]
    if: needs.bump.outputs.release_created == 'true'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.bump.outputs.tag }}

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: cabin-binary
          path: build/

      - name: Make binary executable
        run: chmod +x build/cabin

      - name: Setup dependencies
        uses: ./.github/actions/setup-ubuntu-deps

      - name: Install Cabin
        run: |
          mkdir -p "$HOME/.local/bin"
          mv build/cabin "$HOME/.local/bin/"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: Install ttyd
        run: |
          wget https://github.com/tsl0922/ttyd/releases/download/1.7.7/ttyd.x86_64 -P "$HOME/.local/bin"
          mv "$HOME/.local/bin/ttyd.x86_64" "$HOME/.local/bin/ttyd"
          chmod +x "$HOME/.local/bin/ttyd"

      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Install VHS
        run: go install github.com/charmbracelet/vhs@latest

      - name: Install Nerd Font
        run: |
          mkdir -p ~/.local/share/fonts
          wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.3.0/FiraCode.zip
          unzip FiraCode.zip -d ~/.local/share/fonts/
          fc-cache -fv

      - name: Install Zsh
        run: sudo apt update && sudo apt install -y zsh

      - name: Install zsh-syntax-highlighting
        run: |
          git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/z
          echo 'source ~/z/zsh-syntax-highlighting.zsh' >> ~/.zshrc

      - name: Install Starship
        run: |
          curl -sS https://starship.rs/install.sh | sh -s -- -y
          echo 'eval "$(starship init zsh)"' >> ~/.zshrc

      - name: Move demo.tape
        run: mv demo.tape ${{ runner.temp }}

      - name: Generate demo.gif
        run: vhs demo.tape
        working-directory: ${{ runner.temp }}

      - name: Upload demo artifact
        uses: actions/upload-artifact@v4
        with:
          name: rel-demo
          path: ${{ runner.temp }}/demo.gif

  release:
    needs: [bump, package, demo]
    if: needs.bump.outputs.release_created == 'true'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.bump.outputs.tag }}

      - name: Prepend header to RP notes
        uses: actions/github-script@v7
        with:
          script: |
            const tag = '${{ needs.bump.outputs.tag }}';
            const { owner, repo } = context.repo;
            const { data: rel } = await github.rest.repos.getReleaseByTag({ owner, repo, tag });
            const fs = require('fs');
            let header = fs.readFileSync('.github/release-header.md', 'utf8');
            header = header.replace(/\$\{TAG\}/g, tag);
            await github.rest.repos.updateRelease({
              owner, repo, release_id: rel.id,
              body: `${header}\n\n${rel.body ?? ''}`
            });

      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: rel-*
          path: artifacts/
          merge-multiple: true

      - name: Upload release artifacts
        run: gh release upload '${{ needs.bump.outputs.tag }}' artifacts/* --clobber
