name: Release

on:
  workflow_dispatch:

permissions:
  contents: write

env:
  CXX: g++-14

jobs:
  changelog:
    runs-on: ubuntu-24.04
    outputs:
      skipped: ${{ steps.changelog.outputs.skipped }}
      tag: ${{ steps.changelog.outputs.tag }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure we have all tags

      - name: Generate Conventional ChangeLog
        uses: TriPSs/conventional-changelog-action@v6
        id: changelog
        with:
          preset: "conventionalcommits"
          tag-prefix: ""
          output-file: "false"
          version-file: "cabin.toml"
          version-path: "package.version"
          skip-git-pull: "true"

  build:
    needs: changelog
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.changelog.outputs.tag }}

      - name: Setup Ubuntu dependencies
        uses: ./.github/actions/setup-ubuntu-deps

      - name: Build cabin
        run: make BUILD=release -j4

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: cabin-binary
          path: build/cabin

  package:
    needs: [changelog, build]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.changelog.outputs.tag }}

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: cabin-binary
          path: build/

      - name: Make binary executable
        run: chmod +x build/cabin

      - name: Install nFPM
        run: |
          echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
          sudo apt-get update
          sudo apt-get install -y nfpm

      - name: Create DEB package
        run: nfpm pkg --packager deb
        env:
          CABIN_VERSION: ${{ needs.changelog.outputs.tag }}

      - name: Create RPM package
        run: nfpm pkg --packager rpm
        env:
          CABIN_VERSION: ${{ needs.changelog.outputs.tag }}

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: |
            *.deb
            *.rpm

  demo:
    needs: [changelog, build]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.changelog.outputs.tag }}

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: cabin-binary
          path: build/

      - name: Make binary executable
        run: chmod +x build/cabin

      - name: Setup dependencies
        uses: ./.github/actions/setup-ubuntu-deps

      - name: Install Cabin
        run: |
          mkdir -p "$HOME/.local/bin"
          mv build/cabin "$HOME/.local/bin/"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: Install ttyd
        run: |
          wget https://github.com/tsl0922/ttyd/releases/download/1.7.7/ttyd.x86_64 -P "$HOME/.local/bin"
          mv "$HOME/.local/bin/ttyd.x86_64" "$HOME/.local/bin/ttyd"
          chmod +x "$HOME/.local/bin/ttyd"

      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Install VHS
        run: go install github.com/charmbracelet/vhs@latest

      - name: Install Nerd Font
        run: |
          mkdir -p ~/.local/share/fonts
          wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.3.0/FiraCode.zip
          unzip FiraCode.zip -d ~/.local/share/fonts/
          fc-cache -fv

      - name: Install Zsh
        run: sudo apt update && sudo apt install -y zsh

      - name: Install zsh-syntax-highlighting
        run: |
          git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/z
          echo 'source ~/z/zsh-syntax-highlighting.zsh' >> ~/.zshrc

      - name: Install Starship
        run: |
          curl -sS https://starship.rs/install.sh | sh -s -- -y
          echo 'eval "$(starship init zsh)"' >> ~/.zshrc

      - name: Move demo.tape
        run: mv demo.tape ${{ runner.temp }}

      - name: Generate demo.gif
        run: vhs demo.tape
        working-directory: ${{ runner.temp }}

      - name: Upload demo artifact
        uses: actions/upload-artifact@v4
        with:
          name: demo-gif
          path: ${{ runner.temp }}/demo.gif

  release:
    needs: [changelog, package, demo]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.changelog.outputs.tag }}

      - name: Download package artifacts
        uses: actions/download-artifact@v4
        with:
          name: packages

      - name: Download demo artifact
        uses: actions/download-artifact@v4
        with:
          name: demo-gif

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.changelog.outputs.tag }}
          draft: false
          generate_release_notes: ${{ needs.changelog.outputs.skipped }}
          files: |
            *.deb
            *.rpm
            demo.gif
          body: |
            :sparkling_heart: I maintain **Cabin** in my spare time. Buy me a coffee on [GitHub Sponsors](https://github.com/sponsors/ken-matsui) so I can keep shipping features!

            ## Installation

            ### Ubuntu/Debian

            ```bash
            wget https://github.com/cabinpkg/cabin/releases/download/${{ needs.changelog.outputs.tag }}/cabin_${{ needs.changelog.outputs.tag }}_amd64.deb
            sudo dpkg -i cabin_${{ needs.changelog.outputs.tag }}_amd64.deb
            ```

            ### RHEL/CentOS/Fedora

            ```bash
            wget https://github.com/cabinpkg/cabin/releases/download/${{ needs.changelog.outputs.tag }}/cabin-${{ needs.changelog.outputs.tag }}-1.x86_64.rpm
            sudo rpm -i cabin-${{ needs.changelog.outputs.tag }}-1.x86_64.rpm
            ```

            ${{ needs.changelog.outputs.clean_changelog }}
