version: 1.0.{build}

cache:
  - C:\Libraries\yaml-cpp -> appveyor.yml
  - C:\Libraries\boost-1.69.0 -> appveyor.yml

configuration:
  - Debug
  - Release

build:
  verbosity: minimal

environment:
  matrix:
    - COMPILER: gcc  # gcc-7.3.0-posix
      GENERATOR: "MinGW Makefiles"
      CXX_PATH: 'C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin'

    - COMPILER: gcc  # gcc-8.1.0-posix
      GENERATOR: "MinGW Makefiles"
      CXX_PATH: 'C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin'

    - COMPILER: msvc
      GENERATOR: "Visual Studio 15 2017"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      platform: x86

    - COMPILER: msvc
      GENERATOR: "Visual Studio 15 2017"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      platform: x64

install:
  - ps: |
      if ($env:COMPILER -eq "msvc") {
        if ($env:platform -eq "x86") {
          $env:TARGET_PLATFORM = "-A Win32"
        } else {
          $env:TARGET_PLATFORM = "-A x64"
        }
      }
      if ($env:GENERATOR -eq "MinGW Makefiles") {
        $env:path = $env:path.replace("C:\Program Files\Git\usr\bin;", "")
        if ($env:CXX_PATH -ne "") {
          $env:path += ";$env:CXX_PATH"
        }
      }

  # Build yaml-cpp
  - if not exist C:\Libraries\yaml-cpp (
      "C:\Program Files\Git\cmd\git.exe" clone -q https://github.com/jbeder/yaml-cpp.git &&
      cd yaml-cpp &&
      mkdir build &&
      cd build &&
      cmake .. -G "%GENERATOR%" ^
        %TARGET_PLATFORM% ^
        -DYAML_CPP_BUILD_TESTS=OFF ^
        -DMSVC_SHARED_RT=OFF ^
        -DCMAKE_INSTALL_PREFIX=C:\Libraries\yaml-cpp &&
      cmake --build . --target install --config %Configuration% &&
      cd ..\..
    )

  # Build boost
  - ps: $env:ConfigLower = $env:Configuration.ToLower()
  - if not exist C:\Libraries\boost-1.69.0 (
      mkdir C:\Libraries\boost-1.69.0 &&
      pushd C:\Libraries\boost_1_69_0 &&
      bootstrap.bat &&
      b2.exe install ^
        toolset=%COMPILER% ^
        variant=%ConfigLower% ^
        runtime-link=static ^
        -j2 --prefix=C:\Libraries\boost-1.69.0 &&
      popd
    )
  - dir C:\Libraries\boost-1.69.0\include
  - dir C:\Libraries\boost-1.69.0\lib
  - ps: |
      if ($env:GENERATOR -eq "MinGW Makefiles") {
        if ($env:Configuration -eq "Debug") {
          $env:ABI_TAG = "-sd" # _boost_DEBUG_ABI_TAG
        } else {
          $env:ABI_TAG = "-s"  # _boost_RELEASE_ABI_TAG
        }
        dir C:\Libraries\boost-1.69.0\lib |
          rename-item -NewName { $_.name -replace "$env:ABI_TAG-x64","$env:ABI_TAG" }
        dir C:\Libraries\boost-1.69.0\lib
      }

build_script:
  - mkdir build
  - cd build
  - cmake .. -G "%GENERATOR%" ^
      %TARGET_PLATFORM% ^
      -DBoost_USE_STATIC_LIBS=ON ^
      -DBoost_USE_STATIC_RUNTIME=ON ^
      -DENABLE_STATIC=ON ^
      -DBOOST_ROOT=C:\Libraries\boost-1.69.0 ^
      -DBOOST_LIBRARYDIR=C:\Libraries\boost-1.69.0\lib ^
      -Dyaml-cpp_DIR=C:\Libraries\yaml-cpp\CMake
  - cmake --build . --config %Configuration%

artifacts:
  - path: build\Release\poac.exe
    name: release_msvc
  - path: build\poac.exe
    name: release_mingw-w64

notifications:
  - provider: Slack
    incoming_webhook:
      secure: 8Th9f6eSvN/wTVU6h5w9WZGmiKS+uHsl11nHGbR87OKy6/95p6rxiRuzHrJy7MXhanRW4+UqhR1r6C4wqIVDmzJgpRH4iW10mbc2by5sWWo=
    on_build_success: true
    on_build_failure: true
