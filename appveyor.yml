version: "#{build}"

cache:
  - '%BOOST_BUILT_PATH%'
  - 'C:\Libraries\libgit2-%LIBGIT2_VERSION%'
  - 'C:\Libraries\toml11-%TOML11_VERSION%'
  - '%CYG_ROOT%\var\cache\setup'

configuration:
  - Debug
  - Release

build:
  verbosity: minimal

environment:
  global:
    CYG_PACKAGES: gcc-g++,git,make,cmake,libssl-devel,libboost-devel,libgit2-devel
    LIBGIT2_VERSION: 0.28.2
    TOML11_VERSION: 3.1.0

  matrix: # FIXME: Temporarily unsupported cygwin and mingw because of std::filesystem
#    - COMPILER: cygwin-gcc
#      CYG_ROOT: 'C:\cygwin'
#      CYG_SETUP: setup-x86.exe
#    - COMPILER: cygwin-gcc
#      CYG_ROOT: 'C:\cygwin64'
#      CYG_SETUP: setup-x86_64.exe
#
#    - COMPILER: gcc  # gcc-7.3.0-posix
#      GENERATOR: "MinGW Makefiles"
#      CXX_PATH: 'C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin'
#      BOOST_DEFAULT_PATH: 'C:\Libraries\boost_1_69_0'
#      BOOST_BUILT_PATH: 'C:\Libraries\boost-1.69.0'
#    - COMPILER: gcc  # gcc-8.1.0-posix
#      GENERATOR: "MinGW Makefiles"
#      CXX_PATH: 'C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin'
#      BOOST_DEFAULT_PATH: 'C:\Libraries\boost_1_69_0'
#      BOOST_BUILT_PATH: 'C:\Libraries\boost-1.69.0'

    - COMPILER: msvc
      GENERATOR: "Visual Studio 15 2017"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PLATFORM: x86
      BOOST_DEFAULT_PATH: 'C:\Libraries\boost_1_69_0'
      BOOST_BUILT_PATH: 'C:\Libraries\boost-1.69.0'
    - COMPILER: msvc
      GENERATOR: "Visual Studio 15 2017"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PLATFORM: x64
      BOOST_DEFAULT_PATH: 'C:\Libraries\boost_1_69_0'
      BOOST_BUILT_PATH: 'C:\Libraries\boost-1.69.0'

install:
  - if %COMPILER% == cygwin-gcc (
      %CYG_ROOT%\%CYG_SETUP% --quiet-mode ^
        --no-shortcuts --upgrade-also ^
        --local-package-dir "%CYG_ROOT%\var\cache\setup" ^
        --packages %CYG_PACKAGES% &&
      %CYG_ROOT%\bin\bash -lc
        "git clone -q -b v%TOML11_VERSION% https://github.com/ToruNiina/toml11.git &&
        mkdir toml11/build && cd toml11/build &&
        cmake .. -Dtoml11_BUILD_TEST=OFF &&
        make install"
    )

  # Build boost
  - ps: |
      $env:config_lower = $env:configuration.ToLower()
      if ($env:generator -eq "MinGW Makefiles") {
        $env:path = $env:path.replace("C:\Program Files\Git\usr\bin;", "")
        if ($env:cxx_path -ne "") {
          $env:path += ";$env:cxx_path"
        }
      }
  - if not %COMPILER% == cygwin-gcc if not exist %BOOST_BUILT_PATH% (
      pushd %BOOST_DEFAULT_PATH% && mkdir %BOOST_BUILT_PATH% &&
      bootstrap.bat && b2.exe install ^
        toolset=%COMPILER% ^
        variant=%CONFIG_LOWER% ^
        runtime-link=static ^
        -j2 --prefix=%BOOST_BUILT_PATH% &&
      popd &&
      dir %BOOST_BUILT_PATH%\include &&
      dir %BOOST_BUILT_PATH%\lib
    )
  - ps: |
      if ($env:generator -eq "MinGW Makefiles") {
        Get-ChildItem "$($env:BOOST_BUILT_PATH)\lib" |
          Rename-Item -NewName { $_.name -replace '-x64','' }
        Get-ChildItem "$($env:BOOST_BUILT_PATH)\lib"
      }

  # Install libgit2 and toml11
  - ps: |
      if ($env:compiler -eq "msvc") {
        if ($env:platform -eq "x86") {
          $env:CMAKE_GENERATOR_PLATFORM = 'Win32'
        } else {
          $env:CMAKE_GENERATOR_PLATFORM = 'x64'
        }
      }
      $env:GIT_REDIRECT_STDERR = '2>&1'
      @(@{ owner="libgit2"; repo="libgit2"; version="$env:LIBGIT2_VERSION"; opts="" },
        @{ owner="ToruNiina"; repo="toml11"; version="$env:TOML11_VERSION"; opts="-Dtoml11_BUILD_TEST=OFF" }
      ) | foreach {
        $library_path = "C:\Libraries\$($_.repo)-$($_.version)"
        if ("$env:compiler" -ne "cygwin-gcc" -and !(Test-Path "$library_path")) {
          git clone -q -b "v$($_.version)" "https://github.com/$($_.owner)/$($_.repo).git"
          mkdir "$($_.repo)\build"; pushd "$($_.repo)\build"
          cmake .. -G "$env:generator" -DCMAKE_INSTALL_PREFIX="$library_path" "$($_.opts)"
          cmake --build . --target install --config "$env:configuration"
          popd
        }
      }

build_script:
  - if %COMPILER% == cygwin-gcc (
      %CYG_ROOT%\bin\bash -lc
        "cd $APPVEYOR_BUILD_FOLDER &&
        mkdir build && cd build &&
        cmake -Dpoac_BUILD_TEST=ON .. &&
        make install &&
        poac help"
    ) else (
      mkdir build && cd build &&
      cmake .. -G "%GENERATOR%" ^
        -DENABLE_STATIC=ON ^
        -DBoost_USE_STATIC_LIBS=ON ^
        -DBoost_USE_STATIC_RUNTIME=ON ^
        -DBOOST_ROOT=%BOOST_BUILT_PATH% ^
        -DBOOST_LIBRARYDIR=%BOOST_BUILT_PATH%\lib ^
        -DGIT2_DIR=C:\Libraries\libgit2-%LIBGIT2_VERSION% ^
        -DTOML11_DIR=C:\Libraries\toml11-%TOML11_VERSION% &&
      cmake --build . --target install --config %CONFIGURATION%
    )

artifacts:
  - path: build\Release\poac.exe
    name: release_msvc
  - path: build\poac.exe
    name: release_mingw

notifications:
  - provider: Slack
    incoming_webhook:
      secure: 8Th9f6eSvN/wTVU6h5w9WZGmiKS+uHsl11nHGbR87OKy6/95p6rxiRuzHrJy7MXhanRW4+UqhR1r6C4wqIVDmzJgpRH4iW10mbc2by5sWWo=
    on_build_success: true
    on_build_failure: true
