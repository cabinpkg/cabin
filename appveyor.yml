version: "#{build}"

cache:
  - C:\Libraries\boost-1.69.0
  - C:\Libraries\libgit2-0.28.2
  - C:\Libraries\toml11-3.0.1

configuration:
  - Debug
  - Release

build:
  verbosity: minimal

environment:
  global:
    CYG_PACKAGES: gcc-g++,git,make,cmake,libssl-devel,libboost-devel,libgit2-devel

  matrix:
    - COMPILER: cygwin-gcc
      CYG_ROOT: 'C:\cygwin'
      CYG_SETUP: setup-x86.exe

    - COMPILER: cygwin-gcc
      CYG_ROOT: 'C:\cygwin64'
      CYG_SETUP: setup-x86_64.exe

    - COMPILER: gcc  # gcc-7.3.0-posix
      GENERATOR: "MinGW Makefiles"
      CXX_PATH: 'C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin'

    - COMPILER: gcc  # gcc-8.1.0-posix
      GENERATOR: "MinGW Makefiles"
      CXX_PATH: 'C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin'

    - COMPILER: msvc
      GENERATOR: "Visual Studio 15 2017"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      platform: x86

    - COMPILER: msvc
      GENERATOR: "Visual Studio 15 2017"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      platform: x64

install:
  - ps: |
      if ($env:COMPILER -eq "msvc") {
        if ($env:platform -eq "x86") {
          $env:TARGET_PLATFORM = "-A Win32"
        } else {
          $env:TARGET_PLATFORM = "-A x64"
        }
      }
      if ($env:GENERATOR -eq "MinGW Makefiles") {
        $env:path = $env:path.replace("C:\Program Files\Git\usr\bin;", "")
        if ($env:CXX_PATH -ne "") {
          $env:path += ";$env:CXX_PATH"
        }
      }

  - if %COMPILER% == cygwin-gcc (
      %CYG_ROOT%\%CYG_SETUP% --quiet-mode ^
        --no-shortcuts --upgrade-also ^
        --local-package-dir "%CYG_ROOT%\var\cache\setup" ^
        --packages %CYG_PACKAGES% &&
      %CYG_ROOT%\bin\bash -lc
        "git clone -q -b v3.0.1 https://github.com/ToruNiina/toml11.git &&
        cd toml11 &&
        mkdir build &&
        cd build &&
        cmake .. -Dtoml11_BUILD_TEST=OFF &&
        make &&
        make install"
    )

  # Build boost
  - ps: $env:ConfigLower = $env:Configuration.ToLower()
  - if not %COMPILER% == cygwin-gcc if not exist C:\Libraries\boost-1.69.0 (
      pushd C:\Libraries\boost_1_69_0 &&
      mkdir C:\Libraries\boost-1.69.0 &&
      bootstrap.bat &&
      b2.exe install ^
        toolset=%COMPILER% ^
        variant=%ConfigLower% ^
        runtime-link=static ^
        -j2 --prefix=C:\Libraries\boost-1.69.0 &&
      popd &&
      dir C:\Libraries\boost-1.69.0\include &&
      dir C:\Libraries\boost-1.69.0\lib
    )
  - ps: |
      if ($env:GENERATOR -eq "MinGW Makefiles") {
        Get-ChildItem C:\Libraries\boost-1.69.0\lib |
          Rename-Item -NewName { $_.name -replace '-x64','' }
        Get-ChildItem C:\Libraries\boost-1.69.0\lib
      }

  # Install libgit2 and toml11
  - ps: |
      @(@{ owner="libgit2"  ; repo="libgit2"; version="0.28.2" },
        @{ owner="ToruNiina"; repo="toml11" ; version="3.0.1"  }
      ) | foreach {
        $LibraryPath = "C:\Libraries\$($_.repo)-$($_.version)"
        if ($env:COMPILER -ne "cygwin-gcc" -and !(Test-Path $LibraryPath)) {
          git clone -q -b v$($_.version) https://github.com/$($_.owner)/$($_.repo).git
          mkdir $($_.repo)\build; pushd $($_.repo)\build
          cmake .. -G "%GENERATOR%" %TARGET_PLATFORM% -DCMAKE_INSTALL_PREFIX=$LibraryPath
          cmake --build . --target install --config %Configuration%
          popd
        }
      }

build_script:
  - if %COMPILER% == cygwin-gcc (
      %CYG_ROOT%\bin\bash -lc
        "cd $APPVEYOR_BUILD_FOLDER &&
        mkdir build && cd build &&
        cmake -Dpoac_BUILD_TEST=ON .. &&
        make install &&
        poac help"
    ) else (
      mkdir build && cd build &&
      cmake .. -G "%GENERATOR%" ^
        %TARGET_PLATFORM% ^
        -DENABLE_STATIC=ON ^
        -DBoost_USE_STATIC_LIBS=ON ^
        -DBoost_USE_STATIC_RUNTIME=ON ^
        -DBOOST_ROOT=C:\Libraries\boost-1.69.0 ^
        -DBOOST_LIBRARYDIR=C:\Libraries\boost-1.69.0\lib ^
        -DGIT2_DIR=C:\Libraries\libgit2-0.28.2 ^
        -DTOML11_DIR=C:\Libraries\toml11-3.0.1 &&
      cmake --build . --target install --config %Configuration%
    )

artifacts:
  - path: build\Release\poac.exe
    name: release_msvc
  - path: build\poac.exe
    name: release_mingw

notifications:
  - provider: Slack
    incoming_webhook:
      secure: 8Th9f6eSvN/wTVU6h5w9WZGmiKS+uHsl11nHGbR87OKy6/95p6rxiRuzHrJy7MXhanRW4+UqhR1r6C4wqIVDmzJgpRH4iW10mbc2by5sWWo=
    on_build_success: true
    on_build_failure: true
