version: 1.0.{build}

branches:
  except:
    - gh-pages

cache:
  - C:\Libraries\yaml-cpp -> appveyor.yml
  - C:\Libraries\boost-1.69.0 -> appveyor.yml

configuration:
  - Debug
  - Release

platform:
  - x86
  - x64

artifacts:
  - path: build\Release\poac.exe
    name: Release

build:
  verbosity: minimal

environment:
  matrix:
    - COMPILER: mingw-w64
      GENERATOR: "MinGW Makefiles"
      CXX_PATH: 'C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin'
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      COMPILER: msvc
      GENERATOR: "Visual Studio 15 2017"


install:
  - if [%COMPILER%]==[msvc] (
      if [%platform%] == [x86] (
        set TARGET_PLATFORM=Win32
      ) else (
        set TARGET_PLATFORM=x64
      )
    )

#  - if [%COMPILER%]==[mingw-w64] set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
#  - if [%COMPILER%]==[mingw-w64] set PATH="%CXX_PATH%"

  # Build yaml-cpp
  - if not exist C:\Libraries\yaml-cpp (
      git clone -q --branch=yaml-cpp-0.6.2 https://github.com/jbeder/yaml-cpp.git &&
      cd yaml-cpp &&
      mkdir build &&
      cd build &&
      set BUILD_REQUIRE=TRUE
    )
  - ps: |
      if ($env:COMPILER -eq "mingw-w64") {
          $env:path = $env:path.replace("C:\Program Files\Git\usr\bin;", "")
          if ($env:CXX_PATH -ne "") {
              $env:path += ";$env:CXX_PATH"
          }
      }
  - if %BUILD_REQUIRE%==TRUE (
      if defined TARGET_PLATFORM (
        cmake .. -G "%GENERATOR%" ^
          -A %TARGET_PLATFORM% ^
          -DYAML_CPP_BUILD_TESTS=OFF ^
          -DMSVC_SHARED_RT=OFF ^
          -DCMAKE_INSTALL_PREFIX=C:\Libraries\yaml-cpp
      ) else (
        cmake .. -G "%GENERATOR%" ^
          -DYAML_CPP_BUILD_TESTS=OFF ^
          -DMSVC_SHARED_RT=OFF ^
          -DCMAKE_INSTALL_PREFIX=C:\Libraries\yaml-cpp
      )
    )
  - if %BUILD_REQUIRE%==TRUE (
      cmake --build . --target install --config %Configuration% &&
      cd ..\..
    )

  # Build boost
  - if not exist C:\Libraries\boost-1.69.0 (
      mkdir C:\Libraries\boost-1.69.0 &&
      pushd C:\Libraries\boost_1_69_0 &&
      bootstrap.bat &&
      if [%Configuration%]==[Debug] (
        b2.exe runtime-link=static variant=debug install -j2 --prefix=C:\Libraries\boost-1.69.0
      ) else (
        b2.exe runtime-link=static variant=release install -j2 --prefix=C:\Libraries\boost-1.69.0
      ) &&
      popd
    )

#  - if [%COMPILER%]==[mingw-w64] (
#      rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe" &&
#      pacman -Syu --noconfirm &&
#      pacman -Syyu python --noconfirm mingw-w64-x86_64-gcc &&
#      rename "C:\msys64\usr\bin\sh.exe" "sh2.exe" &&
#      cd yaml-cpp && mkdir build && cd build &&
#      cmake .. -G "%GENERATOR%" ^
#        -DCMAKE_PREFIX_PATH=C:\mingw64 ^
#        -DCMAKE_BUILD_TYPE=%Configuration% ^
#        -DYAML_CPP_BUILD_TESTS=OFF ^
#        -DCMAKE_SH=CMAKE_SH-NOTFOUND ^
#        -DCMAKE_INSTALL_PREFIX=C:\Libraries\ &&
#      cmake --build . --target install &&
#      cd ..\..
#    )


build_script:
  - dir C:\Libraries\boost-1.69.0\lib
  - dir C:\Libraries\boost-1.69.0\include

  - mkdir build
  - pushd build

  - if [%COMPILER%]==[msvc] (
      cmake .. -G "%GENERATOR%" ^
        -A %TARGET_PLATFORM% ^
        -DBoost_USE_STATIC_LIBS=ON ^
        -DBoost_USE_STATIC_RUNTIME=ON ^
        -DENABLE_STATIC=ON ^
        -DBOOST_ROOT=C:\Libraries\boost-1.69.0 ^
        -DBOOST_LIBRARYDIR=C:\Libraries\boost-1.69.0\lib ^
        -Dyaml-cpp_DIR=C:\Libraries\yaml-cpp\CMake
    ) else if [%COMPILER%]==[mingw-w64] (
      cmake .. -G "%GENERATOR%" ^
        -DBoost_USE_STATIC_LIBS=ON ^
        -DBoost_USE_STATIC_RUNTIME=ON ^
        -DENABLE_STATIC=ON ^
        -DBOOST_ROOT=C:\Libraries\boost-1.69.0 ^
        -DBOOST_LIBRARYDIR=C:\Libraries\boost-1.69.0\lib ^
        -Dyaml-cpp_DIR=C:\Libraries\yaml-cpp\CMake
    )

  - cmake --build . --config %Configuration%
  - popd


notifications:
  - provider: Slack
    incoming_webhook:
      secure: 8Th9f6eSvN/wTVU6h5w9WZGmiKS+uHsl11nHGbR87OKy6/95p6rxiRuzHrJy7MXhanRW4+UqhR1r6C4wqIVDmzJgpRH4iW10mbc2by5sWWo=
    on_build_success: true
    on_build_failure: true
